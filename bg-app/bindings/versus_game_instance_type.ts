// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import type {
  CallReducerFlags,
  DbContext,
  ErrorContextInterface,
  Event,
  EventContextInterface,
  ReducerEventContextInterface,
  SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId, 
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
} from "@clockworklabs/spacetimedb-sdk";
import { DbBoardGameParam as __DbBoardGameParam } from "./db_board_game_param_type";
import { Player as __Player } from "./player_type";
import { Outcome as __Outcome } from "./outcome_type";
import { DbBoardGame as __DbBoardGame } from "./db_board_game_type";

export type VersusGameInstance = {
  id: number,
  playerOne: Identity | undefined,
  playerTwo: Identity | undefined,
  nextPlayer: __Player,
  gameDone: boolean,
  outcome: __Outcome | undefined,
  gameStateParam: __DbBoardGameParam,
  gameState: __DbBoardGame,
};

/**
 * A namespace for generated helper functions.
 */
export namespace VersusGameInstance {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("id", AlgebraicType.createU32Type()),
      new ProductTypeElement("playerOne", AlgebraicType.createOptionType(AlgebraicType.createIdentityType())),
      new ProductTypeElement("playerTwo", AlgebraicType.createOptionType(AlgebraicType.createIdentityType())),
      new ProductTypeElement("nextPlayer", __Player.getTypeScriptAlgebraicType()),
      new ProductTypeElement("gameDone", AlgebraicType.createBoolType()),
      new ProductTypeElement("outcome", AlgebraicType.createOptionType(__Outcome.getTypeScriptAlgebraicType())),
      new ProductTypeElement("gameStateParam", __DbBoardGameParam.getTypeScriptAlgebraicType()),
      new ProductTypeElement("gameState", __DbBoardGame.getTypeScriptAlgebraicType()),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: VersusGameInstance): void {
    VersusGameInstance.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): VersusGameInstance {
    return VersusGameInstance.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


